// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarOfRightsWeb.Data;

namespace WarOfRightsWeb.Data.Migrations
{
    [DbContext(typeof(WarOfRightsDbContext))]
    [Migration("20210403121258_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WarOfRightsWeb.Data.Map", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("CaptureSpeed")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("DateTimeDescription")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("DefendingTeam")
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int?>("FinalPushTime")
                        .HasColumnType("int");

                    b.Property<string>("LoadingImagePath")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<decimal?>("NeutralizeSpeed")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("RoundTime")
                        .HasColumnType("int");

                    b.Property<string>("SkirmishImagePath")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("SpawnImagePath")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int?>("TicketsCSA")
                        .HasColumnType("int");

                    b.Property<int?>("TicketsUSA")
                        .HasColumnType("int");

                    b.Property<decimal?>("TransferOnDeath")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("WaveTime")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("WarOfRightsWeb.Data.MapRegiment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MapID")
                        .HasColumnType("int");

                    b.Property<int>("RegimentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RegimentID");

                    b.HasIndex("MapID", "RegimentID")
                        .IsUnique();

                    b.ToTable("MapRegiment");
                });

            modelBuilder.Entity("WarOfRightsWeb.Data.MapRegimentWeapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int>("MapRegimentID")
                        .HasColumnType("int");

                    b.Property<int?>("Percent")
                        .HasColumnType("int");

                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WeaponID");

                    b.HasIndex("MapRegimentID", "WeaponID")
                        .IsUnique();

                    b.ToTable("MapRegimentWeapon");
                });

            modelBuilder.Entity("WarOfRightsWeb.Data.Regiment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("Faction")
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("Number")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("State")
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Regiments");
                });

            modelBuilder.Entity("WarOfRightsWeb.Data.Weapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("ParametersDescription")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("WarOfRightsWeb.Data.MapRegiment", b =>
                {
                    b.HasOne("WarOfRightsWeb.Data.Map", "Map")
                        .WithMany("MapRegiments")
                        .HasForeignKey("MapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarOfRightsWeb.Data.Regiment", "Regiment")
                        .WithMany("MapRegiments")
                        .HasForeignKey("RegimentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarOfRightsWeb.Data.MapRegimentWeapon", b =>
                {
                    b.HasOne("WarOfRightsWeb.Data.MapRegiment", "MapRegiment")
                        .WithMany("MapRegimentWeapons")
                        .HasForeignKey("MapRegimentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarOfRightsWeb.Data.Weapon", "Weapon")
                        .WithMany("MapRegimentWeapons")
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
