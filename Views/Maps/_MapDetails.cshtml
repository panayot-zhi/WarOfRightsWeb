@model WarOfRightsWeb.Data.Map

@{
    var previousMap = Model.PreviousMap;
    var nextMap = Model.NextMap;
}

<div class="fancyClearBoth"></div>

@if (previousMap is not null)
{
    var previousMapLink = Url.Action(previousMap.AreaName, "Maps", 
        new { id = previousMap.ID });

    <div id="previousMap" class="fancyLeft">
        <a href="@previousMapLink">
            <h2 class="text-left">&lt;&lt;&nbsp;&nbsp;&nbsp;PREVIOUS MAP<br /><small>(@previousMap.Name)</small></h2>
        </a>
    </div>
}

@if (nextMap is not null)
{
    var nextMapLink = Url.Action(nextMap.AreaName, "Maps", 
        new { id = nextMap.ID });

    <div id="nextMap" class="fancyRight text-right">
        <a href="@nextMapLink">
            <h2 class="text-right">NEXT MAP&nbsp;&nbsp;&nbsp;&gt;&gt;<br /><small>(@nextMap.Name)</small></h2>
        </a>
    </div>
}

<div class="fancyClearBoth"></div>

<h2 class="text-center">~&nbsp;&nbsp;&nbsp;Belligerents&nbsp;&nbsp;&nbsp;~</h2>

<div id="mapBelligerentsUSA" class="fancyLeft">

    <h1 class="text-center">@Labels.USA @(Model.DefendingTeam == Labels.USA ? "(Defending)" : "(Attacking)")</h1>

    @foreach (var regiment in Model.MapUSARegiments.OrderBy(x => x.Regiment.Type).ThenBy(x => x.Order))
    {
        @await Html.PartialAsync("_RegimentBrief", regiment)
    }

</div>

<div id="mapBelligerentsCSA" class="fancyRight">

    <h1 class="text-center">@Labels.CSA @(Model.DefendingTeam == Labels.CSA ? "(Defending)" : "(Attacking)")</h1>

    @foreach (var regiment in Model.MapCSARegiments.OrderBy(x => x.Regiment.Type).ThenBy(x => x.Order))
    {
        @await Html.PartialAsync("_RegimentBrief", regiment)
    }

</div>

@if (User.IsLoggedIn())
{
    <div id="mapParameters" class="fancyClearBoth">

        <h2 class="text-right">Map Parameters</h2>

        <p class="text-right">- Map Type: @Model.MapType</p>
        <p class="text-right">- Tickets USA: @Model.TicketsUSA</p>
        <p class="text-right">- Tickets CSA: @Model.TicketsCSA</p>
        <p class="text-right">- Final Push Time: @(Extensions.SecondsToMinutes(Model.FinalPushTime)) min</p>

    </div>
}

@if (!string.IsNullOrEmpty(Model.NarratorInfo))
{
    var audioPartOne = Url.AudioIfExists(Model.ID + "_1");

    <div id="narratorInfo" class="fancyClearBoth">

        <h2>Historical Narration</h2>

        <p>@Html.Raw(Model.NarratorInfo.Replace("<br>", " "))</p>

        <div id="narratorAudio" class="text-center">
            @if (audioPartOne != null)
            {
                <audio controls height="100" width="100">
                    <source src="@audioPartOne" type="audio/ogg">
                    <p>
                        Your browser doesn't support HTML5 audio. Here is
                        a <a href="@audioPartOne">link to the audio</a> instead.
                    </p>
                </audio>

                var audioPartTwo = Url.AudioIfExists(Model.ID + "_2");
                if (audioPartTwo != null)
                {
                    <audio controls height="100" width="100">
                        <source src="@audioPartTwo" type="audio/ogg">
                        <p>
                            Your browser doesn't support HTML5 audio. Here is
                            a <a href="@audioPartTwo">link to the audio</a> instead.
                        </p>
                    </audio>
                }
            }
        </div>
    </div>
}